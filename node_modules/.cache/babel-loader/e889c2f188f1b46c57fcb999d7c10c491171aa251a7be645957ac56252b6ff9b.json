{"ast":null,"code":"// Enhanced Audio Manager for Rocketter Learning Platform\n// Handles sound effects, background music, and text-to-speech voice interactions\n\nclass AudioManager {\n  constructor() {\n    this.isEnabled = true;\n    this.volume = 0.7;\n    this.musicVolume = 0.3;\n    this.voiceVolume = 0.8;\n    this.currentMusic = null;\n    this.soundEffects = new Map();\n    this.voiceQueue = [];\n    this.isVoicePlaying = false;\n    this.speechSynthesis = window.speechSynthesis;\n    this.voices = [];\n\n    // Initialize voices when they're loaded\n    this.loadVoices();\n\n    // Listen for voices changed event\n    if (this.speechSynthesis) {\n      this.speechSynthesis.onvoiceschanged = () => {\n        this.loadVoices();\n      };\n    }\n  }\n\n  // Load available voices for text-to-speech\n  loadVoices() {\n    if (this.speechSynthesis) {\n      this.voices = this.speechSynthesis.getVoices();\n      console.log('Available voices:', this.voices.length);\n    }\n  }\n\n  // Get the best voice for a character\n  getCharacterVoice(character) {\n    if (!this.voices.length) return null;\n    const voicePreferences = {\n      'child': {\n        preferred: ['Google US English Female', 'Microsoft Zira', 'Samantha', 'Vicki'],\n        pitch: 1.4,\n        rate: 0.9,\n        lang: 'en-US'\n      },\n      'elsa': {\n        preferred: ['Google UK English Female', 'Microsoft Zira', 'Karen'],\n        pitch: 1.2,\n        rate: 0.9,\n        lang: 'en-US'\n      },\n      'spiderman': {\n        preferred: ['Google US English Male', 'Microsoft David', 'Alex'],\n        pitch: 1.0,\n        rate: 1.1,\n        lang: 'en-US'\n      },\n      'moana': {\n        preferred: ['Google UK English Female', 'Microsoft Zira', 'Samantha'],\n        pitch: 1.1,\n        rate: 1.0,\n        lang: 'en-US'\n      },\n      'default': {\n        preferred: ['Google US English Female', 'Microsoft Zira'],\n        pitch: 1.1,\n        rate: 0.95,\n        lang: 'en-US'\n      }\n    };\n    const prefs = voicePreferences[character] || voicePreferences.default;\n\n    // Try to find preferred voice\n    for (const preferredName of prefs.preferred) {\n      const voice = this.voices.find(v => v.name.includes(preferredName));\n      if (voice) return {\n        voice,\n        ...prefs\n      };\n    }\n\n    // Fallback to any English voice\n    const englishVoice = this.voices.find(v => v.lang.startsWith('en'));\n    return englishVoice ? {\n      voice: englishVoice,\n      ...prefs\n    } : null;\n  }\n\n  // Speak text with character voice\n  async speak(text, character = 'default', priority = 'normal') {\n    if (!this.isEnabled || !this.speechSynthesis) return;\n    const voiceConfig = this.getCharacterVoice(character);\n    if (!voiceConfig) {\n      console.warn('No suitable voice found for character:', character);\n      return;\n    }\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.voice = voiceConfig.voice;\n    utterance.pitch = voiceConfig.pitch;\n    utterance.rate = voiceConfig.rate;\n    utterance.volume = this.voiceVolume;\n    utterance.lang = voiceConfig.lang;\n    return new Promise(resolve => {\n      utterance.onend = () => {\n        this.isVoicePlaying = false;\n        this.processVoiceQueue();\n        resolve();\n      };\n      utterance.onerror = error => {\n        console.error('Speech synthesis error:', error);\n        this.isVoicePlaying = false;\n        this.processVoiceQueue();\n        resolve();\n      };\n      if (priority === 'high' || !this.isVoicePlaying) {\n        if (priority === 'high') {\n          this.speechSynthesis.cancel(); // Stop current speech for high priority\n        }\n        this.isVoicePlaying = true;\n        this.speechSynthesis.speak(utterance);\n      } else {\n        // Queue the speech\n        this.voiceQueue.push(utterance);\n      }\n    });\n  }\n\n  // Process queued voice messages\n  processVoiceQueue() {\n    if (this.voiceQueue.length > 0 && !this.isVoicePlaying) {\n      const nextUtterance = this.voiceQueue.shift();\n      this.isVoicePlaying = true;\n      this.speechSynthesis.speak(nextUtterance);\n    }\n  }\n\n  // Play sound effect\n  playSound(soundName, volume = 1.0) {\n    if (!this.isEnabled) return;\n\n    // For demo purposes, we'll use the Web Audio API to generate simple tones\n    // In production, you would load actual audio files\n    const sounds = {\n      // Success sounds\n      'correct': {\n        frequency: 523.25,\n        duration: 0.3,\n        type: 'sine'\n      },\n      // C5\n      'excellent': {\n        frequency: 659.25,\n        duration: 0.5,\n        type: 'sine'\n      },\n      // E5\n      'perfect': {\n        frequency: 783.99,\n        duration: 0.7,\n        type: 'sine'\n      },\n      // G5\n\n      // Feedback sounds\n      'click': {\n        frequency: 800,\n        duration: 0.1,\n        type: 'square'\n      },\n      'hover': {\n        frequency: 400,\n        duration: 0.05,\n        type: 'sine'\n      },\n      'wrong': {\n        frequency: 220,\n        duration: 0.3,\n        type: 'sawtooth'\n      },\n      // Game-specific sounds\n      'snowflake': {\n        frequency: 1046.50,\n        duration: 0.2,\n        type: 'sine'\n      },\n      // C6\n      'web-swing': {\n        frequency: 300,\n        duration: 0.4,\n        type: 'square'\n      },\n      'ocean-wave': {\n        frequency: 150,\n        duration: 0.6,\n        type: 'sine'\n      },\n      // UI sounds\n      'level-up': {\n        frequency: [523.25, 659.25, 783.99],\n        duration: 0.8,\n        type: 'sine'\n      },\n      'achievement': {\n        frequency: [523.25, 659.25, 783.99, 1046.50],\n        duration: 1.0,\n        type: 'sine'\n      }\n    };\n    const soundConfig = sounds[soundName];\n    if (!soundConfig) return;\n    this.generateTone(soundConfig, volume * this.volume);\n  }\n\n  // Generate synthetic sound using Web Audio API\n  generateTone(config, volume) {\n    if (!window.AudioContext && !window.webkitAudioContext) return;\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const gainNode = audioContext.createGain();\n    gainNode.connect(audioContext.destination);\n    gainNode.gain.value = volume;\n    if (Array.isArray(config.frequency)) {\n      // Play chord/sequence\n      config.frequency.forEach((freq, index) => {\n        const oscillator = audioContext.createOscillator();\n        oscillator.connect(gainNode);\n        oscillator.frequency.value = freq;\n        oscillator.type = config.type;\n        const startTime = audioContext.currentTime + index * 0.1;\n        oscillator.start(startTime);\n        oscillator.stop(startTime + config.duration / config.frequency.length);\n      });\n    } else {\n      // Play single tone\n      const oscillator = audioContext.createOscillator();\n      oscillator.connect(gainNode);\n      oscillator.frequency.value = config.frequency;\n      oscillator.type = config.type;\n      oscillator.start();\n      oscillator.stop(audioContext.currentTime + config.duration);\n    }\n  }\n\n  // Play background music (placeholder for actual music files)\n  playBackgroundMusic(theme) {\n    if (!this.isEnabled) return;\n\n    // In production, you would load and play actual music files\n    // For now, we'll just log the action\n    console.log(`Playing background music for theme: ${theme}`);\n\n    // Example implementation would load audio files:\n    // const musicFiles = {\n    //   'frozen': '/audio/music/frozen-theme.mp3',\n    //   'spiderman': '/audio/music/spiderman-theme.mp3',\n    //   'moana': '/audio/music/moana-theme.mp3'\n    // };\n    // this.loadAndPlayMusic(musicFiles[theme]);\n  }\n\n  // Stop background music\n  stopBackgroundMusic() {\n    if (this.currentMusic) {\n      this.currentMusic.pause();\n      this.currentMusic = null;\n    }\n  }\n\n  // Set audio settings\n  setEnabled(enabled) {\n    this.isEnabled = enabled;\n    if (!enabled) {\n      var _this$speechSynthesis;\n      this.stopBackgroundMusic();\n      (_this$speechSynthesis = this.speechSynthesis) === null || _this$speechSynthesis === void 0 ? void 0 : _this$speechSynthesis.cancel();\n    }\n  }\n  setVolume(volume) {\n    this.volume = Math.max(0, Math.min(1, volume));\n  }\n  setVoiceVolume(volume) {\n    this.voiceVolume = Math.max(0, Math.min(1, volume));\n  }\n  setMusicVolume(volume) {\n    this.musicVolume = Math.max(0, Math.min(1, volume));\n    if (this.currentMusic) {\n      this.currentMusic.volume = this.musicVolume;\n    }\n  }\n\n  // Get character-specific phrases for different situations\n  getCharacterPhrase(character, situation, context = {}) {\n    const phrases = {\n      elsa: {\n        welcome: [\"Welcome to my magical ice kingdom! ❄️\", \"Let's learn together in the land of eternal winter!\", \"The cold never bothered me anyway! Ready to learn?\"],\n        correct: [\"Fantastic! You've got ice magic in your brain! ❄️\", \"Perfectly frozen! You're doing amazing!\", \"Let it go, let it flow! Excellent work!\", \"Cool as ice! You're a natural learner!\"],\n        incorrect: [\"That's okay! Even snowflakes take time to form perfectly.\", \"Don't worry, we all make mistakes in the learning process!\", \"Try again! The magic is still within you! ❄️\"],\n        encouragement: [\"Believe in yourself! You have the power!\", \"Some people are worth melting for... and you're learning!\", \"Let your inner magic shine through!\"],\n        levelUp: [\"Amazing! You've unlocked a new level of ice magic!\", \"Incredible! Your powers are growing stronger!\", \"Level up! You're becoming a true ice queen!\"],\n        counting: [`Can you help me count these magical ${context.item || 'snowflakes'}?`, `Let's count together! How many ${context.item || 'ice crystals'} do you see?`, `Use your magic to count the ${context.item || 'frozen treasures'}!`]\n      },\n      spiderman: {\n        welcome: [\"Hey there, true believer! Ready to swing into learning?\", \"Your friendly neighborhood Spider-Man is here to help!\", \"With great power comes great responsibility... to learn!\"],\n        correct: [\"Amazing! You've got spider-sense for learning! 🕷️\", \"Spectacular! Your brain power is incredible!\", \"Web-solutely fantastic! You're a real hero!\", \"Thwip! That's the sound of success!\"],\n        incorrect: [\"Even Spider-Man misses the target sometimes!\", \"Don't worry! Every hero learns from their mistakes!\", \"Try again, web-head! You've got this!\"],\n        encouragement: [\"Remember, anyone can wear the mask! You can do this!\", \"Your spider-sense is tingling with knowledge!\", \"Keep going! Heroes never give up!\"],\n        levelUp: [\"Excelsior! You've leveled up your super powers!\", \"Amazing! You're becoming a real superhero learner!\", \"Web-tastic! You've unlocked new abilities!\"],\n        counting: [`Can you count these ${context.item || 'web symbols'} for me?`, `Help me swing through the city by counting ${context.item || 'buildings'}!`, `Use your spider powers to count ${context.item || 'villains'}!`]\n      },\n      moana: {\n        welcome: [\"Aloha! Welcome to our ocean adventure! 🌊\", \"The ocean has chosen you... for learning!\", \"Set sail with me on this educational journey!\"],\n        correct: [\"Wonderful! The ocean smiles upon your wisdom! 🌊\", \"Boat-iful work! You're navigating perfectly!\", \"Amazing! You know the way!\", \"The ocean chose wisely! Excellent job!\"],\n        incorrect: [\"That's okay! Even the best navigators need to adjust course!\", \"The ocean will guide you back to the right path!\", \"Try again, brave voyager! I believe in you!\"],\n        encouragement: [\"Listen to your heart! It knows the way!\", \"The ocean is calling... and so is knowledge!\", \"You have the heart of Te Fiti within you!\"],\n        levelUp: [\"Incredible! You've discovered a new island of knowledge!\", \"Amazing! Your navigation skills are growing!\", \"You've found your way to the next level!\"],\n        counting: [`Help me count these beautiful ${context.item || 'sea creatures'}!`, `Can you count the ${context.item || 'shells'} along the shore?`, `Let's explore together! Count the ${context.item || 'islands'} we find!`]\n      }\n    };\n    const characterPhrases = phrases[character] || phrases.elsa;\n    const situationPhrases = characterPhrases[situation] || characterPhrases.encouragement;\n    return situationPhrases[Math.floor(Math.random() * situationPhrases.length)];\n  }\n\n  // Cleanup resources\n  destroy() {\n    var _this$speechSynthesis2;\n    this.stopBackgroundMusic();\n    (_this$speechSynthesis2 = this.speechSynthesis) === null || _this$speechSynthesis2 === void 0 ? void 0 : _this$speechSynthesis2.cancel();\n    this.voiceQueue = [];\n  }\n}\n\n// Create singleton instance\nconst audioManager = new AudioManager();\nexport default audioManager;","map":{"version":3,"names":["AudioManager","constructor","isEnabled","volume","musicVolume","voiceVolume","currentMusic","soundEffects","Map","voiceQueue","isVoicePlaying","speechSynthesis","window","voices","loadVoices","onvoiceschanged","getVoices","console","log","length","getCharacterVoice","character","voicePreferences","preferred","pitch","rate","lang","prefs","default","preferredName","voice","find","v","name","includes","englishVoice","startsWith","speak","text","priority","voiceConfig","warn","utterance","SpeechSynthesisUtterance","Promise","resolve","onend","processVoiceQueue","onerror","error","cancel","push","nextUtterance","shift","playSound","soundName","sounds","frequency","duration","type","soundConfig","generateTone","config","AudioContext","webkitAudioContext","audioContext","gainNode","createGain","connect","destination","gain","value","Array","isArray","forEach","freq","index","oscillator","createOscillator","startTime","currentTime","start","stop","playBackgroundMusic","theme","stopBackgroundMusic","pause","setEnabled","enabled","_this$speechSynthesis","setVolume","Math","max","min","setVoiceVolume","setMusicVolume","getCharacterPhrase","situation","context","phrases","elsa","welcome","correct","incorrect","encouragement","levelUp","counting","item","spiderman","moana","characterPhrases","situationPhrases","floor","random","destroy","_this$speechSynthesis2","audioManager"],"sources":["/workspace/src/utils/audioManager.js"],"sourcesContent":["// Enhanced Audio Manager for Rocketter Learning Platform\n// Handles sound effects, background music, and text-to-speech voice interactions\n\nclass AudioManager {\n  constructor() {\n    this.isEnabled = true;\n    this.volume = 0.7;\n    this.musicVolume = 0.3;\n    this.voiceVolume = 0.8;\n    this.currentMusic = null;\n    this.soundEffects = new Map();\n    this.voiceQueue = [];\n    this.isVoicePlaying = false;\n    this.speechSynthesis = window.speechSynthesis;\n    this.voices = [];\n    \n    // Initialize voices when they're loaded\n    this.loadVoices();\n    \n    // Listen for voices changed event\n    if (this.speechSynthesis) {\n      this.speechSynthesis.onvoiceschanged = () => {\n        this.loadVoices();\n      };\n    }\n  }\n\n  // Load available voices for text-to-speech\n  loadVoices() {\n    if (this.speechSynthesis) {\n      this.voices = this.speechSynthesis.getVoices();\n      console.log('Available voices:', this.voices.length);\n    }\n  }\n\n  // Get the best voice for a character\n  getCharacterVoice(character) {\n    if (!this.voices.length) return null;\n\n    const voicePreferences = {\n      'child': {\n        preferred: ['Google US English Female', 'Microsoft Zira', 'Samantha', 'Vicki'], \n        pitch: 1.4, \n        rate: 0.9,\n        lang: 'en-US'\n      },\n      'elsa': { \n        preferred: ['Google UK English Female', 'Microsoft Zira', 'Karen'], \n        pitch: 1.2, \n        rate: 0.9,\n        lang: 'en-US'\n      },\n      'spiderman': { \n        preferred: ['Google US English Male', 'Microsoft David', 'Alex'], \n        pitch: 1.0, \n        rate: 1.1,\n        lang: 'en-US'\n      },\n      'moana': { \n        preferred: ['Google UK English Female', 'Microsoft Zira', 'Samantha'], \n        pitch: 1.1, \n        rate: 1.0,\n        lang: 'en-US'\n      },\n      'default': { \n        preferred: ['Google US English Female', 'Microsoft Zira'], \n        pitch: 1.1, \n        rate: 0.95,\n        lang: 'en-US'\n      }\n    };\n\n    const prefs = voicePreferences[character] || voicePreferences.default;\n    \n    // Try to find preferred voice\n    for (const preferredName of prefs.preferred) {\n      const voice = this.voices.find(v => v.name.includes(preferredName));\n      if (voice) return { voice, ...prefs };\n    }\n    \n    // Fallback to any English voice\n    const englishVoice = this.voices.find(v => v.lang.startsWith('en'));\n    return englishVoice ? { voice: englishVoice, ...prefs } : null;\n  }\n\n  // Speak text with character voice\n  async speak(text, character = 'default', priority = 'normal') {\n    if (!this.isEnabled || !this.speechSynthesis) return;\n\n    const voiceConfig = this.getCharacterVoice(character);\n    if (!voiceConfig) {\n      console.warn('No suitable voice found for character:', character);\n      return;\n    }\n\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.voice = voiceConfig.voice;\n    utterance.pitch = voiceConfig.pitch;\n    utterance.rate = voiceConfig.rate;\n    utterance.volume = this.voiceVolume;\n    utterance.lang = voiceConfig.lang;\n\n    return new Promise((resolve) => {\n      utterance.onend = () => {\n        this.isVoicePlaying = false;\n        this.processVoiceQueue();\n        resolve();\n      };\n\n      utterance.onerror = (error) => {\n        console.error('Speech synthesis error:', error);\n        this.isVoicePlaying = false;\n        this.processVoiceQueue();\n        resolve();\n      };\n\n      if (priority === 'high' || !this.isVoicePlaying) {\n        if (priority === 'high') {\n          this.speechSynthesis.cancel(); // Stop current speech for high priority\n        }\n        this.isVoicePlaying = true;\n        this.speechSynthesis.speak(utterance);\n      } else {\n        // Queue the speech\n        this.voiceQueue.push(utterance);\n      }\n    });\n  }\n\n  // Process queued voice messages\n  processVoiceQueue() {\n    if (this.voiceQueue.length > 0 && !this.isVoicePlaying) {\n      const nextUtterance = this.voiceQueue.shift();\n      this.isVoicePlaying = true;\n      this.speechSynthesis.speak(nextUtterance);\n    }\n  }\n\n  // Play sound effect\n  playSound(soundName, volume = 1.0) {\n    if (!this.isEnabled) return;\n\n    // For demo purposes, we'll use the Web Audio API to generate simple tones\n    // In production, you would load actual audio files\n    const sounds = {\n      // Success sounds\n      'correct': { frequency: 523.25, duration: 0.3, type: 'sine' }, // C5\n      'excellent': { frequency: 659.25, duration: 0.5, type: 'sine' }, // E5\n      'perfect': { frequency: 783.99, duration: 0.7, type: 'sine' }, // G5\n      \n      // Feedback sounds\n      'click': { frequency: 800, duration: 0.1, type: 'square' },\n      'hover': { frequency: 400, duration: 0.05, type: 'sine' },\n      'wrong': { frequency: 220, duration: 0.3, type: 'sawtooth' },\n      \n      // Game-specific sounds\n      'snowflake': { frequency: 1046.50, duration: 0.2, type: 'sine' }, // C6\n      'web-swing': { frequency: 300, duration: 0.4, type: 'square' },\n      'ocean-wave': { frequency: 150, duration: 0.6, type: 'sine' },\n      \n      // UI sounds\n      'level-up': { frequency: [523.25, 659.25, 783.99], duration: 0.8, type: 'sine' },\n      'achievement': { frequency: [523.25, 659.25, 783.99, 1046.50], duration: 1.0, type: 'sine' }\n    };\n\n    const soundConfig = sounds[soundName];\n    if (!soundConfig) return;\n\n    this.generateTone(soundConfig, volume * this.volume);\n  }\n\n  // Generate synthetic sound using Web Audio API\n  generateTone(config, volume) {\n    if (!window.AudioContext && !window.webkitAudioContext) return;\n\n    const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n    const gainNode = audioContext.createGain();\n    gainNode.connect(audioContext.destination);\n    gainNode.gain.value = volume;\n\n    if (Array.isArray(config.frequency)) {\n      // Play chord/sequence\n      config.frequency.forEach((freq, index) => {\n        const oscillator = audioContext.createOscillator();\n        oscillator.connect(gainNode);\n        oscillator.frequency.value = freq;\n        oscillator.type = config.type;\n        \n        const startTime = audioContext.currentTime + (index * 0.1);\n        oscillator.start(startTime);\n        oscillator.stop(startTime + (config.duration / config.frequency.length));\n      });\n    } else {\n      // Play single tone\n      const oscillator = audioContext.createOscillator();\n      oscillator.connect(gainNode);\n      oscillator.frequency.value = config.frequency;\n      oscillator.type = config.type;\n      \n      oscillator.start();\n      oscillator.stop(audioContext.currentTime + config.duration);\n    }\n  }\n\n  // Play background music (placeholder for actual music files)\n  playBackgroundMusic(theme) {\n    if (!this.isEnabled) return;\n    \n    // In production, you would load and play actual music files\n    // For now, we'll just log the action\n    console.log(`Playing background music for theme: ${theme}`);\n    \n    // Example implementation would load audio files:\n    // const musicFiles = {\n    //   'frozen': '/audio/music/frozen-theme.mp3',\n    //   'spiderman': '/audio/music/spiderman-theme.mp3',\n    //   'moana': '/audio/music/moana-theme.mp3'\n    // };\n    // this.loadAndPlayMusic(musicFiles[theme]);\n  }\n\n  // Stop background music\n  stopBackgroundMusic() {\n    if (this.currentMusic) {\n      this.currentMusic.pause();\n      this.currentMusic = null;\n    }\n  }\n\n  // Set audio settings\n  setEnabled(enabled) {\n    this.isEnabled = enabled;\n    if (!enabled) {\n      this.stopBackgroundMusic();\n      this.speechSynthesis?.cancel();\n    }\n  }\n\n  setVolume(volume) {\n    this.volume = Math.max(0, Math.min(1, volume));\n  }\n\n  setVoiceVolume(volume) {\n    this.voiceVolume = Math.max(0, Math.min(1, volume));\n  }\n\n  setMusicVolume(volume) {\n    this.musicVolume = Math.max(0, Math.min(1, volume));\n    if (this.currentMusic) {\n      this.currentMusic.volume = this.musicVolume;\n    }\n  }\n\n  // Get character-specific phrases for different situations\n  getCharacterPhrase(character, situation, context = {}) {\n    const phrases = {\n      elsa: {\n        welcome: [\n          \"Welcome to my magical ice kingdom! ❄️\",\n          \"Let's learn together in the land of eternal winter!\",\n          \"The cold never bothered me anyway! Ready to learn?\"\n        ],\n        correct: [\n          \"Fantastic! You've got ice magic in your brain! ❄️\",\n          \"Perfectly frozen! You're doing amazing!\",\n          \"Let it go, let it flow! Excellent work!\",\n          \"Cool as ice! You're a natural learner!\"\n        ],\n        incorrect: [\n          \"That's okay! Even snowflakes take time to form perfectly.\",\n          \"Don't worry, we all make mistakes in the learning process!\",\n          \"Try again! The magic is still within you! ❄️\"\n        ],\n        encouragement: [\n          \"Believe in yourself! You have the power!\",\n          \"Some people are worth melting for... and you're learning!\",\n          \"Let your inner magic shine through!\"\n        ],\n        levelUp: [\n          \"Amazing! You've unlocked a new level of ice magic!\",\n          \"Incredible! Your powers are growing stronger!\",\n          \"Level up! You're becoming a true ice queen!\"\n        ],\n        counting: [\n          `Can you help me count these magical ${context.item || 'snowflakes'}?`,\n          `Let's count together! How many ${context.item || 'ice crystals'} do you see?`,\n          `Use your magic to count the ${context.item || 'frozen treasures'}!`\n        ]\n      },\n      spiderman: {\n        welcome: [\n          \"Hey there, true believer! Ready to swing into learning?\",\n          \"Your friendly neighborhood Spider-Man is here to help!\",\n          \"With great power comes great responsibility... to learn!\"\n        ],\n        correct: [\n          \"Amazing! You've got spider-sense for learning! 🕷️\",\n          \"Spectacular! Your brain power is incredible!\",\n          \"Web-solutely fantastic! You're a real hero!\",\n          \"Thwip! That's the sound of success!\"\n        ],\n        incorrect: [\n          \"Even Spider-Man misses the target sometimes!\",\n          \"Don't worry! Every hero learns from their mistakes!\",\n          \"Try again, web-head! You've got this!\"\n        ],\n        encouragement: [\n          \"Remember, anyone can wear the mask! You can do this!\",\n          \"Your spider-sense is tingling with knowledge!\",\n          \"Keep going! Heroes never give up!\"\n        ],\n        levelUp: [\n          \"Excelsior! You've leveled up your super powers!\",\n          \"Amazing! You're becoming a real superhero learner!\",\n          \"Web-tastic! You've unlocked new abilities!\"\n        ],\n        counting: [\n          `Can you count these ${context.item || 'web symbols'} for me?`,\n          `Help me swing through the city by counting ${context.item || 'buildings'}!`,\n          `Use your spider powers to count ${context.item || 'villains'}!`\n        ]\n      },\n      moana: {\n        welcome: [\n          \"Aloha! Welcome to our ocean adventure! 🌊\",\n          \"The ocean has chosen you... for learning!\",\n          \"Set sail with me on this educational journey!\"\n        ],\n        correct: [\n          \"Wonderful! The ocean smiles upon your wisdom! 🌊\",\n          \"Boat-iful work! You're navigating perfectly!\",\n          \"Amazing! You know the way!\",\n          \"The ocean chose wisely! Excellent job!\"\n        ],\n        incorrect: [\n          \"That's okay! Even the best navigators need to adjust course!\",\n          \"The ocean will guide you back to the right path!\",\n          \"Try again, brave voyager! I believe in you!\"\n        ],\n        encouragement: [\n          \"Listen to your heart! It knows the way!\",\n          \"The ocean is calling... and so is knowledge!\",\n          \"You have the heart of Te Fiti within you!\"\n        ],\n        levelUp: [\n          \"Incredible! You've discovered a new island of knowledge!\",\n          \"Amazing! Your navigation skills are growing!\",\n          \"You've found your way to the next level!\"\n        ],\n        counting: [\n          `Help me count these beautiful ${context.item || 'sea creatures'}!`,\n          `Can you count the ${context.item || 'shells'} along the shore?`,\n          `Let's explore together! Count the ${context.item || 'islands'} we find!`\n        ]\n      }\n    };\n\n    const characterPhrases = phrases[character] || phrases.elsa;\n    const situationPhrases = characterPhrases[situation] || characterPhrases.encouragement;\n    \n    return situationPhrases[Math.floor(Math.random() * situationPhrases.length)];\n  }\n\n  // Cleanup resources\n  destroy() {\n    this.stopBackgroundMusic();\n    this.speechSynthesis?.cancel();\n    this.voiceQueue = [];\n  }\n}\n\n// Create singleton instance\nconst audioManager = new AudioManager();\n\nexport default audioManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}